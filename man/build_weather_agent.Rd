% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_weather_agent.R
\name{build_weather_agent}
\alias{build_weather_agent}
\title{Build a Weather Agent using OpenWeatherMap + LLM}
\arguments{
\item{llm}{A function that accepts a character prompt and returns an LLM response.}

\item{location_query}{Free-text user query (e.g., "weather in Toronto").}

\item{system_prompt}{Optional LLM system prompt.}

\item{weather_api_key}{API key for OpenWeatherMap. Defaults to \code{Sys.getenv("OPENWEATHERMAP_API_KEY")}.}

\item{units}{Unit system, either "metric" (deg Celsius) or "imperial" (deg Fahrenheit).}

\item{n_tries}{Number of retry attempts if weather or LLM calls fail.}

\item{backoff}{Seconds to wait between retries.}

\item{cache_ttl}{Time-to-live (in minutes) for cached weather data.}

\item{endpoint_url}{OpenWeatherMap endpoint URL. Defaults to \code{https://api.openweathermap.org/data/2.5/weather}.}
}
\value{
A list including success flag, location, weather data, LLM response, and cache status.
}
\description{
This function fetches weather data using the OpenWeatherMap API and formats
the results through an LLM (like OpenAI or Claude) to generate a concise
user-facing weather report.
}
\examples{
\dontrun{
Sys.setenv(OPENWEATHERMAP_API_KEY = "your_api_key")
response <- build_weather_agent(
  llm = call_llm,
  location_query = "Paris, FR"
)
cat(response$llm_response)
}
}
